- name: install shipping component
  hosts: shipping
  become: yes
  tasks: 
  - name: install maven
    ansible.builtin.yum:
     name: maven
     state: installed

  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true
  - when: out.rc != 0
    name: create user roboshop
    become: yes
    ansible.builtin.user:
     name: roboshop

  - name: check /app directory exist or not
    ansible.builtin.stat:
     path: /app
    register: directory
  - name: print the directory stats
    ansible.builtin.debug:
     msg: "output: {{directory}}"
  - when: directory.stat.exists
    name: create /app directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download shipping and extract
    ansible.builtin.unarchive:
     src: https://roboshop-builds.s3.amazonaws.com/shipping.zip                
     dest: /tmp
     remote_src: yes

  - name: maven package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /tmp
  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /tmp

  - name: copy shipping service
    ansible.builtin.copy: 
     src: shipping2.service
     dest: /etc/systemd/system/shipping.service    

  - name: daemon reload
    ansible.builtin.systemd:
     daemon_reload: true

  - name: install mysql client
    ansible.builtin.yum:
     name: mysql
     state: installed

  - name: load mysql schema
    ansible.builtin.shell: mysql -h 172.31.46.144 -uroot -pRoboShop@1 < /tmp/schema/shipping.sql   
    
  - name: restart shipping
    ansible.builtin.service:
     name: shipping
     state: restarted
     enabled: yes
