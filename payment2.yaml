- name: install payment component
  hosts: payment
  become: yes
  tasks:
  - name: install python
    ansible.builtin.yum:
     name: "{{item}}"
     state: installed
    loop:
    - python36
    - gcc
    - python3-devel

  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true
  - when: out.rc != 0
    name: create user roboshop
    become: yes
    ansible.builtin.user: 
     name: roboshop

  - name: check /app directory exist or not
    ansible.builtin.stat:
     path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug: 
     msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
     path: /app
     state: directory  

  - name: download payment and extract
    ansible.builtin.unarchive:
     src: https://roboshop-builds.s3.amazonaws.com/payment.zip
     dest: /app
     remote_src: yes

  - name: install dependencies
    ansible.builtin.command: pip3.6 install -r requirements.txt
    args:
      chdir: /app

  - name: copy payment service
    ansible.builtin.copy:
     src: payment2.service
     dest: /etc/systemd/system/payment.service

  - name: daemon reload
    ansible.builtin.systemd:
     daemon_reload: true

  - name: restart payment
    ansible.builtin.service:
     name: payment
     state: restarted
     enabled: true


     